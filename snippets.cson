# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson
'.source.c':
	'main':
		'prefix': 'main_void'
		'body': 'int\t\tmain(void)\n{\n\t$1\n\treturn (0);\n}'

	'main2':
		'prefix': 'main_ARG'
		'body': 'int\t\tmain(int ac, char **av)\n{\n\t$1\n\treturn (0);\n}'

	'if':
		'prefix': 'if'
		'body': 'if (${1:})\n{\n\t${2:}\n}'

	'while':
		'prefix': 'while'
		'body': 'while (${1:})\n{\n\t${2:}\n}'

	'ft_strlen':
		'prefix': 'ft_strlen'
		'body': 'size_t\tft_strlen($1)'

	'ft_strdup':
		'prefix': 'ft_strdup'
		'body': 'char\t*ft_strdup(${1:const char *s})'

	'ft_strcpy':
		'prefix': 'ft_strcpy'
		'body': 'char\t*ft_strcpy(${1:char *dest}, ${2:const char *src});'

	'ft_strncpy':
		'prefix': 'ft_strncpy'
		'body': 'char\t*ft_strncpy(${1:char *dest}, ${2:const char *src}, ${3:size_t n});'

	'ft_strcat':
		'prefix': 'ft_strcat'
		'body': 'char\t*ft_strcat(${1:char *dest}, ${2:const char *src})'

	'ft_strncat':
		'prefix': 'ft_strncat'
		'body': 'char\t*ft_strncat(${1:char *dest}, ${2:const char *src}, ${3:size_t n)}'
